#!/usr/bin/env bash

function flatten {
  jq '
    def kv (k):
      if type == "array" then
        . as $in | keys[] | 
        if . == 0 then
          $in[.] | kv(k)
        else
          "\(k)_\(.)" as $kk | $in[.] | kv($kk)
        end
      elif type == "object" then
        to_entries | map(["\(k)_\(.key)", .value]) | .[]
      else
        [ k, . ]
      end;

    def flat:
      to_entries | 
      map("\(.key)" as $k | .value | kv($k)) |
      map(select(length > 0)) |
      map({key: .[0], value: .[1]}) |
      from_entries;

    .Reservations[].Instances | 

    map(.Tag = reduce .Tags[] as $t ({}; .[$t.Key | gsub("[^\\w]"; "_")] = $t.Value) | del(.Tags)) |

    map({ key: .PrivateIpAddress, value: . }) |

    map(.value |= flat) | 

    map(.value |= flat) | 

    map(.value |= flat) |

    { _meta: { hostvars: from_entries } }
  '
}

function main {
  local shome="$(cd -P -- "${BASH_SOURCE%/*}/.." && pwd -P)"
  source "$shome/script/profile"

  aws ec2 describe-instances | flatten
}


source sub-chain "$BASH_SOURCE" "$@"
